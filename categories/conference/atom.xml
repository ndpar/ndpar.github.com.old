<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Conference | Side Notes]]></title>
  <link href="http://blog.ndpar.com/categories/conference/atom.xml" rel="self"/>
  <link href="http://blog.ndpar.com/"/>
  <updated>2013-05-25T18:55:44-04:00</updated>
  <id>http://blog.ndpar.com/</id>
  <author>
    <name><![CDATA[Andrey Paramonov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PyCon Canada 2012]]></title>
    <link href="http://blog.ndpar.com/2012/11/12/pycon-canada-2012/"/>
    <updated>2012-11-12T15:40:01-05:00</updated>
    <id>http://blog.ndpar.com/2012/11/12/pycon-canada-2012</id>
    <content type="html"><![CDATA[<p>This weekend I attended <a href="http://pycon.ca/">PyCon Canada</a>, the first conference in Canada dedicated to Python ecosystem. As you might find from my blog, I&rsquo;m not a Python guy. I&rsquo;ve been using Python mostly as a scripting language. I went to this conference for fresh ideas, or, as Michael Feathers said, for cross-polination from Python community. This blog post is not a detailed review of the conference — I just want to share my impression in general.</p>

<h2>Organization</h2>

<p>Considering how little time the organizers had for preparing this conference, 5 months I believe, they did amazing job. They invited great speakers. They kept people well informed using mailing list and Twitter. The official web site was clear and easy to navigate. The location was good. The food was decent. The only complaint I had is about the temperature in the rooms on the first day. It was so freezing cold inside that I had to wear my jacket all the time. But on the second day the problem was fixed.</p>

<h2>Keynotes</h2>

<p>Keynotes were absolutely fantastic. There were three of them. Jessica McKellar was talking about Python community. How they foster it, how they attract new people to programming in general and to Python in particular. She shared her experience from organizing Boston Python user group, the biggest Python user group in the world. The takeaway from her talk: Python community is big, welcoming, and well supported by Python Foundation.</p>

<p>Second keynote was Michael Feathers' <em>Why You Should(n&rsquo;t) be Using a Functional Programming Language Instead</em>. The main idea of his talk is: Don&rsquo;t lock yourself inside one language. Go outside of your community to see what other languages exist out there, how they solved the problems. Study those languages, learn their idioms and techniques, and then go back to your language and start using the ideas you&rsquo;ve learnt. I completely agree with that, and that&rsquo;s why I went to this conference in the first place. He gave bunch of examples of functional programming in Haskell. Then he showed his Ruby code written in functional style, where you could see the influence of Haskell. I liked his presentation because he verbalized the ideas I myself have been thinking about for a while. When I started programming in Groovy my Groovy code was basically a Java code without semicolons. Now my Java code looks more like Groovy.</p>

<p>The closing keynote was by Fernando Pérez, the scientist from University of California, Berkeley, and the creator of IPython. The talk, titled <a href="https://speakerdeck.com/fperez/science-and-python-a-interactively-biased-retrospective-of-a-mostly-successful-decade"><em>Science and Python</em></a>,  was really mind blowing. When I was a student I did all my computations using mainly Fortran and some proprietary software I don&rsquo;t even remember the name of. Later, I played with Mathematica and Octave a little bit. But I didn&rsquo;t know that you can do very sophisticated scientific calculations using Python. Fernando gave some examples from neuroscience, astrophysics and biology, and it&rsquo;s really impressive. The discovery of Supernova PTF11kyl is especially astonishing. From now on, if I need to do some math, I&rsquo;ll be using Python libraries; no more proprietary expensive software. Another theme of the presentation was IPython. Initially I thought it&rsquo;s just a shell on top of the standard Python, but it&rsquo;s actually the whole ecosystem. I cannot explain in a few words how amazing it is. Just google for &ldquo;ipython notebook&rdquo; or read Fernando&rsquo;s <a href="http://blog.fperez.org/2012/09/blogging-with-ipython-notebook.html">blog</a>.</p>

<h2>Talks</h2>

<p>As it happens on every conference, there were some great talks and some lousy talks, interesting talks and boring talks, geeky talks and academic talks. It&rsquo;s all normal and fine. The good thing about this conference though is that signal-noise ratio was pretty high; congratulations to the organizers for choosing talks. Another thing I like is the diversity of formats. There were 45-min presentation, 20-min talks, 5-min lightning talks, 90-min tutorials, and 3-hour workshop (there are also two full day coding sessions but I&rsquo;m not attending them). This is a really good approach. Switching between different formats during the day helps your brain functioning more productive, in my opinion.</p>

<h2>Pleasant discoveries</h2>

<p>I found many projects presented at the conference are using RabbitMQ, and that&rsquo;s great. I wish in Java world people would use AMQP more frequently instead of blindly choosing JMS for every new project.</p>

<p>Many people are using MongoDB properly. Nowadays NoSQL is a very popular buzzword, and many projects are using various NoSQL databases just because it&rsquo;s cool, even if it makes no sense for the project at all. It was nice to see that there are developers out there who do their homework and adopt NoSQL because it fits their domain.</p>

<h2>Unpleasant discoveries</h2>

<p>There seems to be a trend in Python community to despise Java. I actually see this trend in many communities outside of Java, so it&rsquo;s not Python specific, but at this conference I&rsquo;ve heard too many jokes about Java so it&rsquo;s not funny anymore, especially hearing them from the people who don&rsquo;t write a line of code in Java.</p>

<p>Another thing surprised me is the fanatic admiration of Mercurial and hate of Git from some Python programmers. I know lots of people who hate Git, mainly because they are confused and scared by Git. But dislike it for the reason not being written in Python is something new to me.</p>

<h2>Problems in Python</h2>

<p>Package and distribution management in Python is in pretty bad shape. Every person I talked to admitted that it&rsquo;s complete mess at the moment. I myself feel that pain every time I need to install a new library. Which tool should I use: pip, easy_install, pysetup? Some libraries installed using those tools don&rsquo;t work, or work partially. Many programmers use rpm or deb packages instead of Python tools, because OS packages usually work. I came to the same conclusion on my Mac OS. The only flawlessly working Python environment I have is that installed via mac ports. In Java we don&rsquo;t have those problems. Maven solved it once and for all long time ago. Now every JVM language benefits from it. Python community should clean up this mess and standardize their tools. I was told that with introducing PyPi and PEPs the situation is getting better, well, let&rsquo;s see if it resolves all the issues.</p>

<h2>What I&rsquo;ve learnt</h2>

<p>Here is the list of things I found pretty interesting, in no particular order.</p>

<h3>Python libraries to use</h3>

<p>numpy, matplotlib, pandas, scipy, sympy, quantities, collections. Thanks to the people who told me about these libraries.</p>

<h3>Cool Python stuff</h3>

<p>RunSnakeRun &#8212; GUI for Python profiler. Check out the screenshots on their <a href="http://www.vrplumber.com/programming/runsnakerun/">web site</a>. I wish Java profilers could draw such nice graphs.</p>

<p><a href="http://bpython-interpreter.org/screenshots/">bpython</a> &#8212; Python REPL for geeks written in <a href="http://excess.org/urwid/examples.html">Urwid</a>. Thanks to Ian Ward for the really nice <a href="http://pyvideo.org/video/1568/console-applications-with-urwid">presentation</a>.</p>

<h3>Interesting ideas</h3>

<p>Print log statements in JSON format so that you can analyze them using powerful tools. You can also save logs in MongoDB, either offline or asynchronously, and do statistic analysis using aggregation framework.</p>

<p>Write stored procedures in PostgreSQL in Python (and some other languages). They look much better in Python than plSQL.</p>

<h2>Things to learn<a name="learn">&nbsp;</a></h2>

<p>Here are some technology and tools that have a great potential, in my opinion, and worthy of learning: ZeroMQ, IPython, OpenStack. Those were mentioned multiple times during the conference, and I need to check them out in more details.</p>

<h2>Summary</h2>

<p>The conference was great. I&rsquo;m glad I attended it. The organizers did a great job. The conference was beneficial not only to Python community but to Toronto programming community in general. Thanks to all who made it happen.</p>

<p>P.S. Videos from the conference are available <a href="http://pyvideo.org/category/25/pycon-ca-2012">here</a>.</p>
]]></content>
  </entry>
  
</feed>
