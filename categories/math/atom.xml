<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Math | Side Notes]]></title>
  <link href="http://blog.ndpar.com/categories/math/atom.xml" rel="self"/>
  <link href="http://blog.ndpar.com/"/>
  <updated>2013-06-09T14:20:15-04:00</updated>
  <id>http://blog.ndpar.com/</id>
  <author>
    <name><![CDATA[Andrey Paramonov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ford marbles]]></title>
    <link href="http://blog.ndpar.com/2011/11/05/ford-marbles/"/>
    <updated>2011-11-05T08:00:00-04:00</updated>
    <id>http://blog.ndpar.com/2011/11/05/ford-marbles</id>
    <content type="html"><![CDATA[<p>I found these marvelous renderings of Ford circles on <a href="http://www.flickr.com/photos/fdecomite/2564742912/in/photostream">flickr</a>. I can&rsquo;t help but share them here.</p>

<p><img class="center <a" src="href="http://farm4.static.flickr.com/3189/2564742912_d0faf59e38_z.jpg">http://farm4.static.flickr.com/3189/2564742912_d0faf59e38_z.jpg</a>"></p>

<!-- more -->


<p><img class="center <a" src="href="http://farm4.static.flickr.com/3076/2563846663_6d0f428f08_z.jpg">http://farm4.static.flickr.com/3076/2563846663_6d0f428f08_z.jpg</a>"></p>

<p><img class="center <a" src="href="http://farm4.static.flickr.com/3165/2564630336_d35c4ccf04_z.jpg">http://farm4.static.flickr.com/3165/2564630336_d35c4ccf04_z.jpg</a>"></p>

<p>As <a href="/2011/08/06/thomaes-function/">Thomae&rsquo;s function</a>, <a href="http://en.wikipedia.org/wiki/Ford_circle">Ford circles</a> is another visual representation of rational numbers. You can investigate them <a href="http://demonstrations.wolfram.com/FordCircles/">here</a> with interactive Wolfram demo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modulo who?]]></title>
    <link href="http://blog.ndpar.com/2011/09/16/modulo-who/"/>
    <updated>2011-09-16T08:00:00-04:00</updated>
    <id>http://blog.ndpar.com/2011/09/16/modulo-who</id>
    <content type="html"><![CDATA[<p>When programmer and mathematician are talking about modulus or modulo, there is often a confusion what this term means. For programmer <a href="http://en.wikipedia.org/wiki/Modulo_operator">modulo</a> means an operator that finds the <em>remainder</em> of division of one number by another, e.g. 5&nbsp;mod&nbsp;2 = 1. For mathematician <a href="http://en.wikipedia.org/wiki/Modular_arithmetic">modulo</a> is a <em>congruence</em> relation between two numbers: <em>a</em> and <em>b</em> are said to be congruent modulo <em>n</em>, written <em>a</em>&nbsp;&#8801;&nbsp;<em>b</em>&nbsp;(mod&nbsp;<em>n</em>), if their difference <em>a</em>&nbsp;&#8722;&nbsp;<em>b</em> is an integer multiple of <em>n</em>.</p>

<p>These two definitions are not equivalent. The former is a special case of the latter: if <em>b</em>&nbsp;mod&nbsp;<em>n</em> = <em>a</em> then <em>a</em>&nbsp;&#8801;&nbsp;<em>b</em>&nbsp;(mod&nbsp;<em>n</em>). The inverse is not true in general case. 5&nbsp;mod&nbsp;2 = 1, and 1&nbsp;&#8801;&nbsp;5&nbsp;(mod&nbsp;2) because 1&nbsp;&ndash;&nbsp;5&nbsp;=&nbsp;–4 is integer multiple of 2. Now 5&nbsp;&#8801;&nbsp;1&nbsp;(mod&nbsp;2), because 5&nbsp;&ndash;&nbsp;1&nbsp;=&nbsp;4 is evenly divisible by 2, but 1&nbsp;mod&nbsp;2 = 1, not 5.</p>

<p>The biggest confusion happens when programmer and mathematician start arguing about Gauss' famous <a href="http://mathworld.wolfram.com/QuadraticReciprocityTheorem.html">Golden Theorem</a> where both definitions of modulus can be used.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thomae's function]]></title>
    <link href="http://blog.ndpar.com/2011/08/06/thomaes-function/"/>
    <updated>2011-08-06T08:00:00-04:00</updated>
    <id>http://blog.ndpar.com/2011/08/06/thomaes-function</id>
    <content type="html"><![CDATA[<p><a href="http://en.wikipedia.org/wiki/Thomae%27s_function">Thomae&rsquo;s function</a> (a.k.a. Riemann function) is defined on the interval (0, 1) as follows</p>

<p><img class="center" src="/images/posts/thomae-def.png"></p>

<p>Here is the graph of this function with some points highlighted as plus symbols for better view.</p>

<p><img class="center" src="/images/posts/thomae.jpg"></p>

<p>This function has interesting property: it&rsquo;s continuous at all irrational numbers. It&rsquo;s easy to see this if you notice that for any positive <em>ε</em> there is finite number of points above the line <em>y</em> = <em>ε</em>. That means for any irrational number <em>x</em><sub>0</sub> you can always construct a <em>δ</em>-neighbourhood that doesn&rsquo;t contain any point from the area above the line <em>y</em> = <em>ε</em>.</p>

<p><img class="center" src="/images/posts/thomae-e-d.jpg"></p>

<p>To generate the data file with point coordinates I wrote Common Lisp program:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='common-lisp'><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">rational-numbers</span> <span class="p">(</span><span class="nv">max-denominator</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">result</span> <span class="p">(</span><span class="nb">list</span><span class="p">)))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span><span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">q</span> <span class="nv">from</span> <span class="mi">2</span> <span class="nv">to</span> <span class="nv">max-denominator</span> <span class="nb">do</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">p</span> <span class="nv">from</span> <span class="mi">1</span> <span class="nv">to</span> <span class="p">(</span><span class="nb">1-</span> <span class="nv">q</span><span class="p">)</span> <span class="nb">do</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">pushnew</span> <span class="p">(</span><span class="nb">/</span> <span class="nv">p</span> <span class="nv">q</span><span class="p">)</span> <span class="nv">result</span><span class="p">)))</span>
</span><span class='line'><span class="nv">result</span><span class="p">))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">defun</span> <span class="nv">thomae-rational-points</span> <span class="p">(</span><span class="nv">abscissae</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">mapcar</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">list</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">/</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">denominator</span> <span class="nv">x</span><span class="p">))))</span> <span class="nv">abscissae</span><span class="p">))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nb">defun</span> <span class="nv">thomae</span> <span class="p">(</span><span class="nv">max-denominator</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">points</span> <span class="p">(</span><span class="nv">thomae-rational-points</span> <span class="p">(</span><span class="nv">rational-numbers</span> <span class="nv">max-denominator</span><span class="p">))))</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span><span class="p">(</span><span class="nb">with-open-file</span> <span class="p">(</span><span class="nc">stream</span> <span class="s">&quot;thomae.dat&quot;</span> <span class="ss">:direction</span> <span class="ss">:output</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">point</span> <span class="nv">in</span> <span class="nv">points</span> <span class="nb">do</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">format</span> <span class="nc">stream</span> <span class="s">&quot;~4$ ~4$~%&quot;</span> <span class="p">(</span><span class="nb">first</span> <span class="nv">point</span><span class="p">)</span> <span class="p">(</span><span class="nb">second</span> <span class="nv">point</span><span class="p">))))))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="p">(</span><span class="nv">thomae</span> <span class="mi">500</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To create the images I used <a href="http://www.gnuplot.info/">gnuplot</a> commands:</p>

<pre><code>plot "thomae.dat" using 1:2 with dots
plot "thomae.dat" using 1:2 with points
</code></pre>

<p>and Photoshop.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Math and Physics of Benderama]]></title>
    <link href="http://blog.ndpar.com/2011/06/27/math-and-physics-of-benderama/"/>
    <updated>2011-06-27T08:00:00-04:00</updated>
    <id>http://blog.ndpar.com/2011/06/27/math-and-physics-of-benderama</id>
    <content type="html"><![CDATA[<p>The last episode of <a href="http://theinfosphere.org/Benderama">Futurama</a> has interesting formula involved. The entire plot is based on the Professor&rsquo;s latest invention &mdash; <a href="http://en.wikipedia.org/wiki/Banach&amp;#8211;Tarski_paradox">Banach-Tarski</a> Dupla-Shrinker &mdash; the machine that produces two copies of any object at a 60% scale. It was just a matter of time when Bender found a proper usage of this machine: to replicate himself. Then two small copies of Bender replicated themselves making four smaller copies, and so forth. At some point the Professor horrified the crew that if they don&rsquo;t stop this unlimited growth, the total mass of all Benders will eventually be so big that the entire Earth will be consumed during the process of replication. As a proof he demonstrated this formula of the mass of all generations of Bender</p>

<p><img class="center <a" src="href="http://pool.theinfosphere.org/images/thumb/0/04/Benderama_Maths.png/800px-Benderama_Maths.png">http://pool.theinfosphere.org/images/thumb/0/04/Benderama_Maths.png/800px-Benderama_Maths.png</a>"></p>

<p>This is a perfect toy for a science geek. The first obvious question it brings: is this formula mathematically correct? As it turns out, it is not. Considering the scale of 60%, the cubic dependency of volume on linear dimension, and the constant density of all copies, the formula should be the following</p>

<p><img class="center" src="/images/posts/benderama-mass.png"></p>

<p>As you can see the total mass of infinite number of Benders actually converges to approximately 1.76 <em>M</em><sub>0</sub>. So from Math perspective there is nothing to worry about. But what if our assumption of constant density is invalid. Would it be a problem from Physics perspective? Let&rsquo;s see.</p>

<p>Knowing that every new copy has a size of 0.6 of the original it was made from, we have the following formula for the size of Bender in the <em>n</em><sup>th</sup> generation</p>

<p><img class="center" src="/images/posts/benderama-length.png"></p>

<p>This exponential function becomes very small pretty soon. In the <a href="http://www.wolframalpha.com/input/?i=0.6%5E154">154</a><sup>th</sup> generation it already reaches the <a href="http://en.wikipedia.org/wiki/Planck_length">Planck length</a>, after which the further replication is physically impossible. If we calculate the total mass of 154 Bender&rsquo;s generations using the Professor&rsquo;s formula, we get <a href="http://www.wolframalpha.com/input/?i=H%28154%29">H(154)</a> &#215; <a href="http://www.peelified.com/Futurama-Forum-1/Topic-4095-0-Benders_Weight.html">238</a> kg &#8776; 1,337.56 kg, which is nothing comparing to the Earth mass.</p>

<p>So we have to admit that from both Math and Physics perspective the Professor was wrong, and there was no real threat to the Earth.</p>

<p>Although the Professor&rsquo;s formula doesn&rsquo;t describe the replication process adequately, it&rsquo;s still a beautiful piece of Math because it&rsquo;s a formula of <a href="http://en.wikipedia.org/wiki/Harmonic_series_(mathematics)">harmonic series</a>. If you want to know why harmonic series is beautiful and which real processes it describes, read this nice <a href="http://plus.maths.org/content/perfect-harmony">article</a> of John H. Webb.</p>

<p>And don&rsquo;t miss the next <a href="http://theinfosphere.org/Ghost_in_the_Machines">episode</a> of Futurama this Thursday :&ndash;)</p>
]]></content>
  </entry>
  
</feed>
